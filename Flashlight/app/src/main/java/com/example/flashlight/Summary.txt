*   Flashlight

    - 손전등 앱을 앱과 위젯으로 구성
    - 앱과 위젯 모두 손전등을 켜고 끄는 인터페이스만 제공.
    - 핵심 기능은 서비스에서 수행

    1. 손전등 기능 구현 : Torch.kt
        a. 손전등 기능을 구현할 Torch 클래스 생성
        b. 카메라 서비스 객체를 찾는다.
        c. 기기의 카메라의 고유한 id를 찾는다.
        d. 카메라 id를 모은 list를 이용하여
            flash 여부와 카메라 방향을 매개로 해당하는 카메라를 찾음.
        e. 카메라가 없다면 null을 반환.
    2. 액티비티에서 손전등 기능 사용 (앱 실행) : activity_main.xml
        a. 화면 작성
        b. Switch 소개
        c. 액티비티에서 손전등 켜기
    3. 서비스에서 손전등 기능 사용 : TorchService.kt
        a. 서비스 소개
            - 안드로이드 4대 컴포넌트 중 하나.
            - 화면이 없고 백그라운드에서 수행하는 작업을 작성하는 컴포넌트
        b. 서비스의 생명주기
            - onCreate() -> onStartCommand() -> 서비스 동작 -> onDestroy() -> 서비스 중지
            - onCreate()    : 서비스가 생성될 때 호출되는 콜백 메소드. 초기화 수행
            - onStartCommand()
                : 서비스가 액티비티와 같은 다른 컴포넌트로부터 startService() 메소드로 호출되면
                  불리는 콜백 메소드 실행할 작업을 작성
            - onDestroy()
                : 서비스 내부에서 stopSelf()를 호출하거나 외부에서 stopService()로 종료되면 호출

        c. 서비스로 손전등 기능 옮기기
        d. 액티비티에서 서비스를 사용해 손전등 켜기
    4. 앱 위젯 작성 (위젯 실행 ;앱 실행 x)
        a. 앱 위젯 추가
        b. 앱 위젯이 생성한 코드 살피기
            - TorchAppWidget.kt     : 앱 위젯을 클릭할 때의 동작 작성
            - torch_app_widget.xml  : 앱 위젯의 레이아웃 정의 파일
            - dimens.xml            : 여백 값
            - torch_app_widget_info.xml : 앱 위젯의 각종 설정 파일
        c. 앱 위젯 레이아웃 수정
            - torch_app_widget.xml 파일 수정
        d. 앱 위젯에서 손전등 켜기
        e. 앱 위젯 배치
        f. 앱 위젯 사용하기

    - CameraManager : 플래시를 켜는 기능을 제공하는 클래스
    - Service       : 화면이 없고 백그라운드에서 실행되는 컴포넌트
    - App Widget    : 런처에 배치하여 빠르게 앱 기능을 쓸 수 있게 하는 컴포넌트

    - anko lib      : intent, dialog, log 구현에 도움되는 라이브러리
    - extensions    : 객체 id를 자동 추출해주는 라이브러리

    - intent
        : 수행할 작업에 대한 추상적인 설명
          다른 응용 프로그램의 코드 간 런타임 바인딩을 수행하기 위한 기능 제공
          가장 중요한 용도는 액티비티를 시작하는 데 있다.
          액티비티 사이의 접착제 역할.
          동작/데이터 쌍의 속성으로 구성되어 있다.

